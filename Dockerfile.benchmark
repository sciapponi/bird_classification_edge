FROM nvidia/cuda:11.8.0-devel-ubuntu20.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONIOENCODING=utf-8
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    build-essential \
    git \
    wget \
    curl \
    unzip \
    sox \
    libsox-fmt-all \
    ffmpeg \
    portaudio19-dev \
    libasound2-dev \
    libsndfile1 \
    libhdf5-dev \
    libhdf5-serial-dev \
    hdf5-tools \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Set Python3 as default python
RUN ln -s /usr/bin/python3 /usr/bin/python

# Upgrade pip
RUN python -m pip install --upgrade pip

# Install PyTorch with CUDA support first (to avoid conflicts)
RUN pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

# Create workspace directory
WORKDIR /workspace

# Copy requirements and install Python dependencies
COPY requirements.txt /workspace/
COPY benchmark/requirements.txt /workspace/benchmark_requirements.txt

# Install large packages separately with extended timeout
RUN pip install --timeout 600 --retries 5 birdnetlib

# Install Python packages with increased timeout and retries
RUN pip install --timeout 300 --retries 3 --cache-dir /tmp/pip-cache -r requirements.txt

# Install benchmark-specific requirements with increased timeout and retries
RUN pip install --timeout 300 --retries 3 --cache-dir /tmp/pip-cache -r benchmark_requirements.txt

# Install additional packages for benchmark (including statistical analysis)
RUN pip install numba resampy psutil

# For testing, skip user creation - run as root (simplified)
# This is fine for benchmarking purposes

# Set default command (will be overridden by run script)
CMD ["/bin/bash"] 