[2025-05-19 17:19:24,375][__main__][INFO] - Experiment: 4birds_CF_combined_log_linear_gru64
[2025-05-19 17:19:24,412][__main__][INFO] - Using device: cuda
[2025-05-19 17:19:24,413][__main__][INFO] - Checking for datasets...
[2025-05-19 17:19:24,413][__main__][INFO] - ESC-50 dataset not found or empty. Downloading...
[2025-05-19 17:19:24,413][__main__][INFO] - Creating initial bird sound datasets (train/val/test)...
[2025-05-19 17:19:24,413][__main__][INFO] - Using dataset split parameters: val=0.15, test=0.15, seed=42
[2025-05-19 17:19:24,426][__main__][INFO] - Initial bird samples: Train=1439, Val=308, Test=308
[2025-05-19 17:19:24,426][__main__][INFO] - Calculating target number of 'no birds' samples...
[2025-05-19 17:19:24,426][__main__][INFO] - Number of bird classes: 4. 'No Birds' label index: 4
[2025-05-19 17:19:24,426][__main__][INFO] - Average samples per bird class in training set: 719.50
[2025-05-19 17:19:24,426][__main__][INFO] - Target 'no birds' samples for training: 720
[2025-05-19 17:19:24,426][__main__][INFO] - Target 'no birds' samples for validation: 154
[2025-05-19 17:19:24,426][__main__][INFO] - Target 'no birds' samples for testing: 154
[2025-05-19 17:19:24,427][__main__][INFO] - Combining bird and 'no birds' datasets...
[2025-05-19 17:19:24,427][__main__][INFO] - Final training samples: 1439
[2025-05-19 17:19:24,427][__main__][INFO] - Final validation samples: 308
[2025-05-19 17:19:24,427][__main__][INFO] - Final testing samples: 308
[2025-05-19 17:19:24,568][__main__][INFO] - Model architecture:
[2025-05-19 17:19:24,568][__main__][INFO] - Improved_Phi_GRU_ATT(
  (combined_log_linear_spec): DifferentiableSpectrogram()
  (amplitude_to_db): AmplitudeToDB()
  (phi): MatchboxNetSkip(
    (initial_conv_module): Sequential(
      (0): PhiNetCausalConvBlock(
        (_layers): ModuleList(
          (0): CausalConv1d(
            (pad): ConstantPad1d(padding=(0, 0), value=0)
            (conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,), bias=False)
          )
          (1): BatchNorm1d(64, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
          (2): Hardswish()
          (3): Dropout1d(p=0.05, inplace=False)
          (4): DepthwiseCausalConv(
            (pad): ConstantPad1d(padding=(4, 0), value=0)
            (conv): Conv1d(64, 64, kernel_size=(5,), stride=(1,), groups=64, bias=False)
          )
          (5): BatchNorm1d(64, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
          (6): Hardswish()
          (7): SEBlock(
            (se_conv): CausalConv1d(
              (pad): ConstantPad1d(padding=(0, 0), value=0)
              (conv): Conv1d(64, 10, kernel_size=(1,), stride=(1,), bias=False)
            )
            (se_conv2): CausalConv1d(
              (pad): ConstantPad1d(padding=(0, 0), value=0)
              (conv): Conv1d(10, 64, kernel_size=(1,), stride=(1,), bias=False)
            )
            (activation): Hardswish()
            (mult): FloatFunctional(
              (activation_post_process): Identity()
            )
          )
          (8): CausalConv1d(
            (pad): ConstantPad1d(padding=(0, 0), value=0)
            (conv): Conv1d(64, 32, kernel_size=(1,), stride=(1,), bias=False)
          )
          (9): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
        )
      )
      (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Dropout(p=0.3, inplace=False)
    )
    (blocks_modulelist): ModuleList(
      (0): ModuleList(
        (0): Sequential(
          (0): PhiNetCausalConvBlock(
            (_layers): ModuleList(
              (0): CausalConv1d(
                (pad): ConstantPad1d(padding=(0, 0), value=0)
                (conv): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
              )
              (1): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
              (2): Hardswish()
              (3): Dropout1d(p=0.05, inplace=False)
              (4): DepthwiseCausalConv(
                (pad): ConstantPad1d(padding=(2, 0), value=0)
                (conv): Conv1d(32, 32, kernel_size=(3,), stride=(1,), groups=32, bias=False)
              )
              (5): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
              (6): Hardswish()
              (7): SEBlock(
                (se_conv): CausalConv1d(
                  (pad): ConstantPad1d(padding=(0, 0), value=0)
                  (conv): Conv1d(32, 5, kernel_size=(1,), stride=(1,), bias=False)
                )
                (se_conv2): CausalConv1d(
                  (pad): ConstantPad1d(padding=(0, 0), value=0)
                  (conv): Conv1d(5, 32, kernel_size=(1,), stride=(1,), bias=False)
                )
                (activation): Hardswish()
                (mult): FloatFunctional(
                  (activation_post_process): Identity()
                )
              )
              (8): CausalConv1d(
                (pad): ConstantPad1d(padding=(0, 0), value=0)
                (conv): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
              )
              (9): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (op): FloatFunctional(
              (activation_post_process): Identity()
            )
          )
          (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
          (3): Dropout(p=0.3, inplace=False)
        )
        (1): Sequential(
          (0): PhiNetCausalConvBlock(
            (_layers): ModuleList(
              (0): CausalConv1d(
                (pad): ConstantPad1d(padding=(0, 0), value=0)
                (conv): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
              )
              (1): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
              (2): Hardswish()
              (3): Dropout1d(p=0.05, inplace=False)
              (4): DepthwiseCausalConv(
                (pad): ConstantPad1d(padding=(4, 0), value=0)
                (conv): Conv1d(32, 32, kernel_size=(3,), stride=(1,), dilation=(2,), groups=32, bias=False)
              )
              (5): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
              (6): Hardswish()
              (7): SEBlock(
                (se_conv): CausalConv1d(
                  (pad): ConstantPad1d(padding=(0, 0), value=0)
                  (conv): Conv1d(32, 5, kernel_size=(1,), stride=(1,), bias=False)
                )
                (se_conv2): CausalConv1d(
                  (pad): ConstantPad1d(padding=(0, 0), value=0)
                  (conv): Conv1d(5, 32, kernel_size=(1,), stride=(1,), bias=False)
                )
                (activation): Hardswish()
                (mult): FloatFunctional(
                  (activation_post_process): Identity()
                )
              )
              (8): CausalConv1d(
                (pad): ConstantPad1d(padding=(0, 0), value=0)
                (conv): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
              )
              (9): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (op): FloatFunctional(
              (activation_post_process): Identity()
            )
          )
          (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
          (3): Dropout(p=0.3, inplace=False)
        )
      )
      (1): ModuleList(
        (0): Sequential(
          (0): PhiNetCausalConvBlock(
            (_layers): ModuleList(
              (0): CausalConv1d(
                (pad): ConstantPad1d(padding=(0, 0), value=0)
                (conv): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
              )
              (1): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
              (2): Hardswish()
              (3): Dropout1d(p=0.05, inplace=False)
              (4): DepthwiseCausalConv(
                (pad): ConstantPad1d(padding=(8, 0), value=0)
                (conv): Conv1d(32, 32, kernel_size=(3,), stride=(1,), dilation=(4,), groups=32, bias=False)
              )
              (5): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
              (6): Hardswish()
              (7): SEBlock(
                (se_conv): CausalConv1d(
                  (pad): ConstantPad1d(padding=(0, 0), value=0)
                  (conv): Conv1d(32, 5, kernel_size=(1,), stride=(1,), bias=False)
                )
                (se_conv2): CausalConv1d(
                  (pad): ConstantPad1d(padding=(0, 0), value=0)
                  (conv): Conv1d(5, 32, kernel_size=(1,), stride=(1,), bias=False)
                )
                (activation): Hardswish()
                (mult): FloatFunctional(
                  (activation_post_process): Identity()
                )
              )
              (8): CausalConv1d(
                (pad): ConstantPad1d(padding=(0, 0), value=0)
                (conv): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
              )
              (9): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (op): FloatFunctional(
              (activation_post_process): Identity()
            )
          )
          (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
          (3): Dropout(p=0.3, inplace=False)
        )
        (1): Sequential(
          (0): PhiNetCausalConvBlock(
            (_layers): ModuleList(
              (0): CausalConv1d(
                (pad): ConstantPad1d(padding=(0, 0), value=0)
                (conv): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
              )
              (1): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
              (2): Hardswish()
              (3): Dropout1d(p=0.05, inplace=False)
              (4): DepthwiseCausalConv(
                (pad): ConstantPad1d(padding=(4, 0), value=0)
                (conv): Conv1d(32, 32, kernel_size=(3,), stride=(1,), dilation=(2,), groups=32, bias=False)
              )
              (5): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
              (6): Hardswish()
              (7): SEBlock(
                (se_conv): CausalConv1d(
                  (pad): ConstantPad1d(padding=(0, 0), value=0)
                  (conv): Conv1d(32, 5, kernel_size=(1,), stride=(1,), bias=False)
                )
                (se_conv2): CausalConv1d(
                  (pad): ConstantPad1d(padding=(0, 0), value=0)
                  (conv): Conv1d(5, 32, kernel_size=(1,), stride=(1,), bias=False)
                )
                (activation): Hardswish()
                (mult): FloatFunctional(
                  (activation_post_process): Identity()
                )
              )
              (8): CausalConv1d(
                (pad): ConstantPad1d(padding=(0, 0), value=0)
                (conv): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
              )
              (9): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (op): FloatFunctional(
              (activation_post_process): Identity()
            )
          )
          (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
          (3): Dropout(p=0.3, inplace=False)
        )
      )
      (2): ModuleList(
        (0-1): 2 x Sequential(
          (0): PhiNetCausalConvBlock(
            (_layers): ModuleList(
              (0): CausalConv1d(
                (pad): ConstantPad1d(padding=(0, 0), value=0)
                (conv): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
              )
              (1): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
              (2): Hardswish()
              (3): Dropout1d(p=0.05, inplace=False)
              (4): DepthwiseCausalConv(
                (pad): ConstantPad1d(padding=(2, 0), value=0)
                (conv): Conv1d(32, 32, kernel_size=(3,), stride=(1,), groups=32, bias=False)
              )
              (5): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
              (6): Hardswish()
              (7): SEBlock(
                (se_conv): CausalConv1d(
                  (pad): ConstantPad1d(padding=(0, 0), value=0)
                  (conv): Conv1d(32, 5, kernel_size=(1,), stride=(1,), bias=False)
                )
                (se_conv2): CausalConv1d(
                  (pad): ConstantPad1d(padding=(0, 0), value=0)
                  (conv): Conv1d(5, 32, kernel_size=(1,), stride=(1,), bias=False)
                )
                (activation): Hardswish()
                (mult): FloatFunctional(
                  (activation_post_process): Identity()
                )
              )
              (8): CausalConv1d(
                (pad): ConstantPad1d(padding=(0, 0), value=0)
                (conv): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
              )
              (9): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (op): FloatFunctional(
              (activation_post_process): Identity()
            )
          )
          (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
          (3): Dropout(p=0.3, inplace=False)
        )
      )
    )
    (projections_modulelist): ModuleList(
      (0-2): 3 x Identity()
    )
    (final_block_to_conv1_projection): Identity()
    (final_conv1_module): Sequential(
      (0): PhiNetCausalConvBlock(
        (_layers): ModuleList(
          (0): CausalConv1d(
            (pad): ConstantPad1d(padding=(0, 0), value=0)
            (conv): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
          )
          (1): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
          (2): Hardswish()
          (3): Dropout1d(p=0.05, inplace=False)
          (4): DepthwiseCausalConv(
            (pad): ConstantPad1d(padding=(8, 0), value=0)
            (conv): Conv1d(32, 32, kernel_size=(5,), stride=(1,), dilation=(2,), groups=32, bias=False)
          )
          (5): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
          (6): Hardswish()
          (7): SEBlock(
            (se_conv): CausalConv1d(
              (pad): ConstantPad1d(padding=(0, 0), value=0)
              (conv): Conv1d(32, 5, kernel_size=(1,), stride=(1,), bias=False)
            )
            (se_conv2): CausalConv1d(
              (pad): ConstantPad1d(padding=(0, 0), value=0)
              (conv): Conv1d(5, 32, kernel_size=(1,), stride=(1,), bias=False)
            )
            (activation): Hardswish()
            (mult): FloatFunctional(
              (activation_post_process): Identity()
            )
          )
          (8): CausalConv1d(
            (pad): ConstantPad1d(padding=(0, 0), value=0)
            (conv): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
          )
          (9): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
        )
      )
      (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Dropout(p=0.3, inplace=False)
    )
    (conv1_to_conv2_projection): Identity()
    (final_conv2_module): Sequential(
      (0): PhiNetCausalConvBlock(
        (_layers): ModuleList(
          (0): CausalConv1d(
            (pad): ConstantPad1d(padding=(0, 0), value=0)
            (conv): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
          )
          (1): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
          (2): Hardswish()
          (3): Dropout1d(p=0.05, inplace=False)
          (4): DepthwiseCausalConv(
            (pad): ConstantPad1d(padding=(0, 0), value=0)
            (conv): Conv1d(32, 32, kernel_size=(1,), stride=(1,), groups=32, bias=False)
          )
          (5): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
          (6): Hardswish()
          (7): SEBlock(
            (se_conv): CausalConv1d(
              (pad): ConstantPad1d(padding=(0, 0), value=0)
              (conv): Conv1d(32, 5, kernel_size=(1,), stride=(1,), bias=False)
            )
            (se_conv2): CausalConv1d(
              (pad): ConstantPad1d(padding=(0, 0), value=0)
              (conv): Conv1d(5, 32, kernel_size=(1,), stride=(1,), bias=False)
            )
            (activation): Hardswish()
            (mult): FloatFunctional(
              (activation_post_process): Identity()
            )
          )
          (8): CausalConv1d(
            (pad): ConstantPad1d(padding=(0, 0), value=0)
            (conv): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
          )
          (9): BatchNorm1d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
        )
      )
      (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Dropout(p=0.3, inplace=False)
    )
  )
  (gru): GRU(32, 64, batch_first=True)
  (projection): Linear(in_features=64, out_features=64, bias=True)
  (keyword_attention): AttentionLayer(
    (attention): Linear(in_features=64, out_features=1, bias=True)
  )
  (fc): Linear(in_features=64, out_features=5, bias=True)
)
[2025-05-19 17:19:24,573][__main__][INFO] - Total parameters: 53,256
[2025-05-19 17:19:24,573][__main__][INFO] - Trainable parameters: 53,256
[2025-05-19 17:19:24,573][__main__][INFO] - Computing model complexity...
[2025-05-19 17:19:39,368][__main__][WARNING] - Could not compute MACs: unsupported format string passed to NoneType.__format__
[2025-05-19 17:19:40,212][__main__][INFO] - Starting training...
[2025-05-19 17:21:29,933][__main__][INFO] - Epoch 1/10
[2025-05-19 17:21:29,933][__main__][INFO] - Train Loss: 0.8386, Train Acc: 56.43%
[2025-05-19 17:21:29,933][__main__][INFO] - Val Loss: 0.6526, Val Acc: 62.01%
[2025-05-19 17:21:29,933][__main__][INFO] - Learning Rate: 0.001000
[2025-05-19 17:21:29,934][__main__][INFO] - Validation loss improved from inf to 0.6526
[2025-05-19 17:21:29,961][__main__][INFO] - New best model saved with val acc: 62.01%
[2025-05-19 17:23:19,973][__main__][INFO] - Epoch 2/10
[2025-05-19 17:23:19,973][__main__][INFO] - Train Loss: 0.6371, Train Acc: 61.85%
[2025-05-19 17:23:19,974][__main__][INFO] - Val Loss: 0.6113, Val Acc: 65.58%
[2025-05-19 17:23:19,974][__main__][INFO] - Learning Rate: 0.001000
[2025-05-19 17:23:19,974][__main__][INFO] - Validation loss improved from 0.6526 to 0.6113
[2025-05-19 17:23:20,009][__main__][INFO] - New best model saved with val acc: 65.58%
[2025-05-19 17:25:08,286][__main__][INFO] - Epoch 3/10
[2025-05-19 17:25:08,287][__main__][INFO] - Train Loss: 0.6223, Train Acc: 61.85%
[2025-05-19 17:25:08,287][__main__][INFO] - Val Loss: 0.5747, Val Acc: 73.38%
[2025-05-19 17:25:08,287][__main__][INFO] - Learning Rate: 0.001000
[2025-05-19 17:25:08,287][__main__][INFO] - Validation loss improved from 0.6113 to 0.5747
[2025-05-19 17:25:08,316][__main__][INFO] - New best model saved with val acc: 73.38%
[2025-05-19 17:26:52,996][__main__][INFO] - Epoch 4/10
[2025-05-19 17:26:52,996][__main__][INFO] - Train Loss: 0.5837, Train Acc: 68.45%
[2025-05-19 17:26:52,996][__main__][INFO] - Val Loss: 0.8886, Val Acc: 47.40%
[2025-05-19 17:26:52,996][__main__][INFO] - Learning Rate: 0.001000
[2025-05-19 17:26:52,996][__main__][INFO] - No improvement in validation loss for 1/10 epochs
[2025-05-19 17:28:46,721][__main__][INFO] - Epoch 5/10
[2025-05-19 17:28:46,722][__main__][INFO] - Train Loss: 0.5272, Train Acc: 74.84%
[2025-05-19 17:28:46,722][__main__][INFO] - Val Loss: 0.5308, Val Acc: 73.05%
[2025-05-19 17:28:46,722][__main__][INFO] - Learning Rate: 0.001000
[2025-05-19 17:28:46,722][__main__][INFO] - Validation loss improved from 0.5747 to 0.5308
[2025-05-19 17:30:41,598][__main__][INFO] - Epoch 6/10
[2025-05-19 17:30:41,599][__main__][INFO] - Train Loss: 0.4900, Train Acc: 76.51%
[2025-05-19 17:30:41,599][__main__][INFO] - Val Loss: 0.5569, Val Acc: 71.75%
[2025-05-19 17:30:41,599][__main__][INFO] - Learning Rate: 0.001000
[2025-05-19 17:30:41,599][__main__][INFO] - No improvement in validation loss for 1/10 epochs
[2025-05-19 17:32:29,341][__main__][INFO] - Epoch 7/10
[2025-05-19 17:32:29,341][__main__][INFO] - Train Loss: 0.4755, Train Acc: 77.07%
[2025-05-19 17:32:29,341][__main__][INFO] - Val Loss: 0.6880, Val Acc: 59.42%
[2025-05-19 17:32:29,341][__main__][INFO] - Learning Rate: 0.001000
[2025-05-19 17:32:29,341][__main__][INFO] - No improvement in validation loss for 2/10 epochs
[2025-05-19 17:34:14,467][__main__][INFO] - Epoch 8/10
[2025-05-19 17:34:14,467][__main__][INFO] - Train Loss: 0.4341, Train Acc: 79.78%
[2025-05-19 17:34:14,468][__main__][INFO] - Val Loss: 0.4802, Val Acc: 76.95%
[2025-05-19 17:34:14,468][__main__][INFO] - Learning Rate: 0.001000
[2025-05-19 17:34:14,468][__main__][INFO] - Validation loss improved from 0.5308 to 0.4802
[2025-05-19 17:34:14,516][__main__][INFO] - New best model saved with val acc: 76.95%
[2025-05-19 17:36:03,455][__main__][INFO] - Epoch 9/10
[2025-05-19 17:36:03,456][__main__][INFO] - Train Loss: 0.4296, Train Acc: 79.85%
[2025-05-19 17:36:03,456][__main__][INFO] - Val Loss: 0.4261, Val Acc: 79.55%
[2025-05-19 17:36:03,456][__main__][INFO] - Learning Rate: 0.001000
[2025-05-19 17:36:03,456][__main__][INFO] - Validation loss improved from 0.4802 to 0.4261
[2025-05-19 17:36:03,472][__main__][INFO] - New best model saved with val acc: 79.55%
[2025-05-19 17:37:52,682][__main__][INFO] - Epoch 10/10
[2025-05-19 17:37:52,682][__main__][INFO] - Train Loss: 0.4272, Train Acc: 78.94%
[2025-05-19 17:37:52,682][__main__][INFO] - Val Loss: 0.5953, Val Acc: 70.13%
[2025-05-19 17:37:52,682][__main__][INFO] - Learning Rate: 0.001000
[2025-05-19 17:37:52,682][__main__][INFO] - No improvement in validation loss for 1/10 epochs
[2025-05-19 17:37:53,245][__main__][INFO] - Training history plot saved to /raid/home/e3da/interns/lmannini/bird_classification_edge/logs/4birds_CF_combined_log_linear_gru64/2025-05-19_17-19-24/training_history.png
[2025-05-19 17:37:53,246][__main__][INFO] - 
Evaluating on test set...
[2025-05-19 17:38:12,715][__main__][INFO] - Test Loss: 0.4253, Test Acc: 79.22%
[2025-05-19 17:38:13,530][__main__][INFO] - Confusion matrix saved to /raid/home/e3da/interns/lmannini/bird_classification_edge/logs/4birds_CF_combined_log_linear_gru64/2025-05-19_17-19-24/confusion_matrix.png
[2025-05-19 17:38:13,531][__main__][INFO] - Training completed! Best validation accuracy: 79.55%
[2025-05-19 17:38:13,531][__main__][INFO] - Test accuracy: 79.22%
[2025-05-19 17:38:13,531][__main__][INFO] - Results saved to /raid/home/e3da/interns/lmannini/bird_classification_edge/logs/4birds_CF_combined_log_linear_gru64/2025-05-19_17-19-24
